<?xml version="1.0" standalone="no"?>

<kickstart>

  <description>
  NSCA Nagios plug-in for Nagios client
  </description>

  <copyright>
  Copyright (c) 2000 - 2008 The Regents of the University of California.
  All rights reserved. Rocks(r) v5.1 www.rocksclusters.org
  </copyright>

  <changelog>
  $Log$
  Revision 1.9  2009/07/31 17:33:19  jhayes
  Added nsca_schedule script to ease manipulating cron entry for passive checks.
  Change "rocks add nagios service" command so that specifying a frequency of 0
  terminates the service.  Implement "rocks remove nagios service" for passive
  checks.

  Revision 1.8  2009/07/25 03:19:35  jhayes
  Add convenience method for generating and transmitting results of passive
  NSCA checks.

  Revision 1.7  2009/07/17 20:29:54  jhayes
  Support specification of passive services.  Install Nagios plug-ins on client
  nodes so that they can be used for passive checks.

  Revision 1.6  2009/04/24 23:49:33  anoop
  Enable sunos build for nsca. Added libmcrypt back to enable optional
  encryption. Removed send-nsca, so that we build from the same codebase

  Revision 1.5  2009/04/23 20:39:03  jhayes
  Work around nsca weirdness.

  Revision 1.4  2009/04/23 20:10:31  jhayes
  Portability tweaks.  Remove libmcrypt, since we're not using it.

  Revision 1.3  2009/04/23 17:48:10  jhayes
  Build send_nsca on target for portability.

  Revision 1.2  2009/04/21 20:50:52  jhayes
  Add NSCA configuration files.

  Revision 1.1  2009/04/21 17:59:01  jhayes
  Initial additions for NSCA plug-in.

  </changelog>

  <package os="linux">nsca</package>
  <package os="linux">nagios-plugins</package>
  <package os="sunos">ROCKSnsca</package>
  <package os="sunos">ROCKSlibmcrypt</package>

  <post>

/usr/sbin/groupadd -g 413 nagios
/usr/sbin/useradd  -u 413 -g nagios -c "Nagios Monitoring" -d /opt/nagios nagios

<!-- adapted from nsca-2.7.2/sample_config/send_nsca.cfg -->
mkdir -p /opt/nagios/etc
chown -R nagios:nagios /opt/nagios/etc
<file name="/opt/nagios/etc/send_nsca.cfg" owner="nagios:nagios" perms="0644">
##
## ROCKS
##
# We're restricting to local network; password would be overkill
#password=
encryption_method=1
</file> <!-- NOTE: send_nsca pukes if we indent this closing tag! -->

<file name="/opt/nagios/bin/nsca_schedule" perms="0755">
#!/bin/bash
# A script for starting/stopping an NSCA passive service check.
# usage: nsca_schedule &lt;service_name&gt; &lt;period&gt; &lt;command&gt;
# Specify a period of 0 to stop running a passive service check.
service=$1
period=$2
shift; shift
command=$*
tmpfile=/tmp/crontab$$
# Remove any existing schedule for the service.
/usr/bin/crontab -l 2&gt;/dev/null | sed -e "/NAGIOSX${service}X/d" &gt; ${tmpfile}
if test "${period}" != "0"; then
  /bin/echo "*/${period} * * * * /bin/echo NAGIOSX${service}X &gt;/dev/null &amp;&amp; " \
    "/opt/nagios/bin/nsca_check ${service} ${command}" &gt;&gt; ${tmpfile}
fi
/usr/bin/crontab ${tmpfile}
/bin/rm -f ${tmpfile}
</file>

<file name="/opt/nagios/bin/nsca_check" perms="0755">
#!/bin/bash
# A convenience script that runs a Nagios service check and sends the output
# through send_nsca.
# usage: nsca_check &lt;service_name&gt; &lt;command&gt;
service=$1
shift
case $* in
  /*)
    output=`$*`
  ;;
  *)
    output=`/opt/nagios/libexec/$*`
  ;;
esac
exitcode=$?
hostname='<var name="Kickstart_PrivateHostname"/>'
server=$hostname
if test -n '<var name="NSCA_ServerName"/>'; then
  server='<var name="NSCA_ServerName"/>'
fi
/usr/bin/printf "%s\t%s\t%s\t%s\n" \
                "$hostname" "$service" "$exitcode" "$output" | \
  /opt/nagios/bin/send_nsca -H $server -c /opt/nagios/etc/send_nsca.cfg
</file>

</post>

</kickstart>
